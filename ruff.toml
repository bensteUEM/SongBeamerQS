target-version = "py310"

# Set the maximum line length to 88
line-length = 88

fix = true

extend-include = ["*.ipynb"]

indent-width = 4

# Group violations by containing file.
output-format = "grouped"

[format]
# Enable reformatting of code snippets in docstrings.
docstring-code-format = true

# Use double quotes for non-triple-quoted strings.
quote-style = "double"

[lint]

select = ["ALL"]


ignore = [
    "ANN101", # missing-type-function-argument (ANN001)#
    "ANN102", # Missing type annotation for `cls` in classmethod
    "ERA001", # commented-out-code (ERA001)#
    "FBT",    #flake8-boolean-trap (FBT)

    "D100", # using class docstrings only module docstrings don't matter

    # Unittest style instead of pytest
    "PT009", # pytest-unittest-assertion (PT009)
    "PT027", #pytest-unittest-raises-assertion (PT027)

    # possible conflict with formatter
    "ISC001", #single-line-implicit-string-concatenation (ISC001)#
    "E501",   #line-too-long (E501)
    "COM812", #missing-trailing-comma (COM812)#

    #ToDo Items
    "FIX",

    #Abstacts used to split file
    "B024", #is an abstract base class, but it has no abstract methods
]
extend-ignore = [] #Skip rules that need more code cleaning...

[lint.per-file-ignores]
"notebooks/*.ipynb" = [
    "T201", #print
    "E402" #import outside top-level
    ]

"tests/*" =[
    "S101", #pytest allow asserts
]

[lint.pydocstyle]
convention = "google"

[lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 5
